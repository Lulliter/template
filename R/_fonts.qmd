---
title: "Install & Verify System Fonts for R/RStudio on macOS (zsh)"
format:
  html:
    toc: true
    code-fold: show
execute:
  echo: true
  warning: true
  message: true
editor: source
---

## Overview

How to install a font (e.g., **Libre Franklin**) on **macOS** with **zsh**, then verify and use it in **R/RStudio**.

Workflow:

1.  Check which fonts R can see.
2.  Download the family ZIP from Google Fonts (manual step).
3.  Unzip & install the `.ttf` files into `~/Library/Fonts` (user-only install).
4.  Restart RStudio (manual step) so it refreshes its font cache.
5.  Verify the font in R.
6.  (Optional) Use it in ggplot with `showtext`.

> Assumptions: macOS, zsh shell, R/RStudio. Replace *Libre Franklin* with another family if you like (e.g., *Roboto*).

------------------------------------------------------------------------
## 0) Browse in Google Fonts

- [Google Fonts](https://fonts.google.com/) is a great source of free, open-source fonts.
- Search for the desired family (e.g., **Lato**).


## 1) In R: check if the font is already available

> `systemfonts()` lists all fonts R can see on your system (both system-wide and user-specific!!!).

```{r}
# Install helpers (only if missing)
install.packages(c("systemfonts", "stringr"))

library(systemfonts)
library(stringr)

# List discovered system fonts
sf <- system_fonts()
c(available_fonts = nrow(sf))
head(sf, 10)

# Search for Libre Franklin (case-insensitive)
subset(sf, str_detect(family, regex("Libre\\s*Franklin", ignore_case = TRUE)))
subset(sf, str_detect(family, regex("Lato", ignore_case = TRUE)))
```

------------------------------------------------------------------------

## 2) Download the font (Google Fonts) — manual

-   Go to Google Fonts and download the family (example): **Libre Franklin**\
    (Example page: https://fonts.google.com/specimen/Libre+Franklin)
-   The ZIP will land in `~/Downloads/`.

You can unzip via Finder, or simply run the next chunk which handles both unzip and copy.

------------------------------------------------------------------------

## 3) Terminal (zsh): unzip & install the TTFs into your user Fonts

This will: - Unzip any `Libre_Franklin*.zip` found in `~/Downloads/` - Copy all matching `.ttf` files to `~/Library/Fonts` - Show what was installed

```{bash}
# Quarto runs bash by default; works fine on zsh systems too.

cd ~/Downloads 
ls *.zip 
unzip Lato.zip -d ~/Downloads/Lato
```

Then copy the files in the User's Fonts folder

> **Tip:** Copying into `~/Library/Fonts` installs fonts **for your user only** (no admin rights needed).\
> For a system-wide install (admin), use `/Library/Fonts` instead.

```{bash}
# Ensure user Fonts directory exists
mkdir -p ~/Library/Fonts

echo "Looking for Lato TTF(s) in ~/Downloads/Lato…"
find ~/Downloads/Lato -type f -iname "Lato*.ttf" -print -exec cp {} ~/Library/Fonts/ \;

# Verify what was copied
echo "Installed Lato TTF files in ~/Library/Fonts:"
ls ~/Library/Fonts/ | grep -i "Lato.*\.ttf"

# OR
ls ~/Library/Fonts | grep -i "franklin\|roboto\|lato" || true

# Clean up unzipped folder (optional)
rm -rf ~/Downloads/Lato
```

------------------------------------------------------------------------

## 4) Restart RStudio

Quit and reopen **RStudio** to refresh the font cache. *(Manual step.)*

------------------------------------------------------------------------

## 5) Back in R: verify the font is now visible

```{r}
library(systemfonts)
library(stringr)

sf <- system_fonts()

# Look again for Libre Franklin
rob <- subset(sf, str_detect(family, regex("Lato", ignore_case = TRUE)))
rob

# Inspect the exact family name(s) you'll use in plots (the `family` column)
unique(rob$family)
```

If you see rows, the font is successfully installed and recognized by R.

------------------------------------------------------------------------

## 6) Use the font in ggplot/Quarto

If you render to PNG/PDF with base devices, using the `family` usually works. 

For portable, reliable rendering (especially HTML/PNG), `showtext` helps:

+ bc it makes the chosen font render consistently across devices: RSTUDIO, PNG, HTML, etc.
+ It can load fonts from files or the web via `sysfonts` (`font_add()`, `font_add_google()`), then rasterizes the glyphs so they look the same everywhere.

```{r}
# install.packages(c("showtext", "sysfonts", "ragg"))  # once
library(sysfonts)
library(showtext)
showtext_auto()

# A) Add Libre Franklin from local fonts
font_add(family = "Libre Franklin", 
         regular = "~/Library/Fonts/LibreFranklin-Regular.ttf",
         bold = "~/Library/Fonts/LibreFranklin-Bold.ttf",
         italic = "~/Library/Fonts/LibreFranklin-Italic.ttf")
font_add(family = "Lato", 
         regular = "~/Library/Fonts/Lato-Regular.ttf",
         bold = "~/Library/Fonts/Lato-Bold.ttf",
         italic = "~/Library/Fonts/Lato-Italic.ttf")

# OR

# B) Add from Google Fonts directly via internet
# font_add_google(name = "Libre Franklin", family = "Libre Franklin")
# font_add_google(name = "Lato", family = "Lato")

# TIP: call this to turn on showtext rendering
showtext_auto(enable = TRUE)
```

> Using option B) (`font_add_google()`) means you don't need to install the font manually, but it requires internet access when rendering && it may not carry over to other devices (e.g. PDF, PowerPoint).

### Test
```{r}
library(ggplot2)
ggplot(mtcars, aes(wt, mpg)) +
  geom_point() +
  theme_minimal(base_family = "Libre Franklin") +
  labs(title = "Test with Libre Franklin",
       subtitle = "Rendered with showtext")+
  theme(
    plot.subtitle = element_text(face = "italic"),
    axis.title.x  = element_text(face = "bold")
  )

ggplot(mtcars, aes(wt, mpg)) +
  geom_point() +
  theme_minimal(base_family = "Lato") +
  labs(title = "Test with Lato",
       subtitle = "Rendered with showtext")+
  theme(
    plot.subtitle = element_text(face = "italic"),
    axis.title.x  = element_text(face = "bold")
  )
```

------------------------------------------------------------------------

## Appendix: Variants & Troubleshooting

-   **Different family (e.g., Roboto):**

    -   Download Roboto from Google Fonts.

    -   Replace the copy pattern with `roboto*.ttf`, e.g.:

        ``` bash
        find ~/Downloads -type f -iname "roboto*.ttf" -print -exec cp {} ~/Library/Fonts/ \;
        ```

-   **Still not found?** Make sure you see files in `~/Library/Fonts`, restart RStudio, and list more fonts with:

    ``` r
    head(system_fonts(), 50)
    ```

-   **PDF/PNG without showtext:** May still work if the font is available; `showtext` reduces surprises across devices.

-  If other people receive outputs, some formats are _safe_ (e.g., PNG, PDF) while others depend on system fonts (e.g., Word, PowerPoint). Soluzioni:
   - paste plots as images
   - embed fonts in .docx/.pptx (not always possible)
